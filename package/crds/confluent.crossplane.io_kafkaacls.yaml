---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: kafkaacls.confluent.crossplane.io
spec:
  group: confluent.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - confluent
    kind: KafkaACL
    listKind: KafkaACLList
    plural: kafkaacls
    singular: kafkaacl
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaACL is the Schema for the KafkaACLs API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaACLSpec defines the desired state of KafkaACL
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  credentials:
                    description: 'supports the following: The Cluster API Credentials.'
                    items:
                      properties:
                        keySecretRef:
                          description: The Kafka API Key. The Cluster API Key for
                            your Confluent Cloud cluster.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        secretSecretRef:
                          description: The Kafka API Secret. The Cluster API Secret
                            for your Confluent Cloud cluster.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - keySecretRef
                      - secretSecretRef
                      type: object
                    type: array
                  host:
                    description: The host for the ACL. Should be set to * for Confluent
                      Cloud. The host for the ACL.
                    type: string
                  kafkaCluster:
                    description: 'supports the following:'
                    items:
                      properties:
                        id:
                          description: The ID of the Kafka cluster, for example, lkc-abc123.
                            The Kafka cluster ID (e.g., `lkc-12345`).
                          type: string
                        idRef:
                          description: Reference to a Cluster to populate id.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        idSelector:
                          description: Selector for a Cluster to populate id.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  operation:
                    description: 'The operation type for the ACL. Accepted values
                      are: ALL, READ, WRITE, CREATE, DELETE, ALTER, DESCRIBE, CLUSTER_ACTION,
                      DESCRIBE_CONFIGS, ALTER_CONFIGS, and IDEMPOTENT_WRITE.  See
                      Authorization using ACLs to find mappings of (resource_type,
                      operation) to one or more Kafka APIs or request types. The operation
                      type for the ACL.'
                    type: string
                  patternType:
                    description: 'The pattern type for the ACL. Accepted values are:
                      LITERAL and PREFIXED. The pattern type for the ACL.'
                    type: string
                  permission:
                    description: 'The permission for the ACL. Accepted values are:
                      DENY and ALLOW. The permission for the ACL.'
                    type: string
                  principal:
                    description: The principal for the ACL. The principal for the
                      ACL.
                    type: string
                  principalRef:
                    description: Reference to a ServiceAccount to populate principal.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  principalSelector:
                    description: Selector for a ServiceAccount to populate principal.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  resourceName:
                    description: The resource name for the ACL. Must be kafka-cluster
                      if resource_type equals to CLUSTER. The resource name for the
                      ACL.
                    type: string
                  resourceType:
                    description: 'The type of the resource. Accepted values are: TOPIC,
                      GROUP, CLUSTER, TRANSACTIONAL_ID, DELEGATION_TOKEN. See Authorization
                      using ACLs to find definitions of resource types and mappings
                      of (resource_type, operation) to one or more Kafka APIs or request
                      types. The type of the resource.'
                    type: string
                  restEndpoint:
                    description: The REST endpoint of the Kafka cluster, for example,
                      https://pkc-00000.us-central1.gcp.confluent.cloud:443. The REST
                      endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
                    type: string
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  credentials:
                    description: 'supports the following: The Cluster API Credentials.'
                    items:
                      type: object
                    type: array
                  host:
                    description: The host for the ACL. Should be set to * for Confluent
                      Cloud. The host for the ACL.
                    type: string
                  kafkaCluster:
                    description: 'supports the following:'
                    items:
                      type: object
                    type: array
                  operation:
                    description: 'The operation type for the ACL. Accepted values
                      are: ALL, READ, WRITE, CREATE, DELETE, ALTER, DESCRIBE, CLUSTER_ACTION,
                      DESCRIBE_CONFIGS, ALTER_CONFIGS, and IDEMPOTENT_WRITE.  See
                      Authorization using ACLs to find mappings of (resource_type,
                      operation) to one or more Kafka APIs or request types. The operation
                      type for the ACL.'
                    type: string
                  patternType:
                    description: 'The pattern type for the ACL. Accepted values are:
                      LITERAL and PREFIXED. The pattern type for the ACL.'
                    type: string
                  permission:
                    description: 'The permission for the ACL. Accepted values are:
                      DENY and ALLOW. The permission for the ACL.'
                    type: string
                  resourceName:
                    description: The resource name for the ACL. Must be kafka-cluster
                      if resource_type equals to CLUSTER. The resource name for the
                      ACL.
                    type: string
                  resourceType:
                    description: 'The type of the resource. Accepted values are: TOPIC,
                      GROUP, CLUSTER, TRANSACTIONAL_ID, DELEGATION_TOKEN. See Authorization
                      using ACLs to find definitions of resource types and mappings
                      of (resource_type, operation) to one or more Kafka APIs or request
                      types. The type of the resource.'
                    type: string
                  restEndpoint:
                    description: The REST endpoint of the Kafka cluster, for example,
                      https://pkc-00000.us-central1.gcp.confluent.cloud:443. The REST
                      endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: host is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.host)
                || has(self.initProvider.host)'
            - message: operation is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.operation)
                || has(self.initProvider.operation)'
            - message: patternType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.patternType)
                || has(self.initProvider.patternType)'
            - message: permission is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.permission)
                || has(self.initProvider.permission)'
            - message: resourceName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.resourceName)
                || has(self.initProvider.resourceName)'
            - message: resourceType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.resourceType)
                || has(self.initProvider.resourceType)'
          status:
            description: KafkaACLStatus defines the observed state of KafkaACL.
            properties:
              atProvider:
                properties:
                  credentials:
                    description: 'supports the following: The Cluster API Credentials.'
                    items:
                      properties:
                        keySecretRef:
                          description: The Kafka API Key. The Cluster API Key for
                            your Confluent Cloud cluster.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        secretSecretRef:
                          description: The Kafka API Secret. The Cluster API Secret
                            for your Confluent Cloud cluster.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - keySecretRef
                      - secretSecretRef
                      type: object
                    type: array
                  host:
                    description: The host for the ACL. Should be set to * for Confluent
                      Cloud. The host for the ACL.
                    type: string
                  id:
                    description: The ID of the Kafka cluster, for example, lkc-abc123.
                    type: string
                  kafkaCluster:
                    description: 'supports the following:'
                    items:
                      properties:
                        id:
                          description: The ID of the Kafka cluster, for example, lkc-abc123.
                            The Kafka cluster ID (e.g., `lkc-12345`).
                          type: string
                      type: object
                    type: array
                  operation:
                    description: 'The operation type for the ACL. Accepted values
                      are: ALL, READ, WRITE, CREATE, DELETE, ALTER, DESCRIBE, CLUSTER_ACTION,
                      DESCRIBE_CONFIGS, ALTER_CONFIGS, and IDEMPOTENT_WRITE.  See
                      Authorization using ACLs to find mappings of (resource_type,
                      operation) to one or more Kafka APIs or request types. The operation
                      type for the ACL.'
                    type: string
                  patternType:
                    description: 'The pattern type for the ACL. Accepted values are:
                      LITERAL and PREFIXED. The pattern type for the ACL.'
                    type: string
                  permission:
                    description: 'The permission for the ACL. Accepted values are:
                      DENY and ALLOW. The permission for the ACL.'
                    type: string
                  principal:
                    description: The principal for the ACL. The principal for the
                      ACL.
                    type: string
                  resourceName:
                    description: The resource name for the ACL. Must be kafka-cluster
                      if resource_type equals to CLUSTER. The resource name for the
                      ACL.
                    type: string
                  resourceType:
                    description: 'The type of the resource. Accepted values are: TOPIC,
                      GROUP, CLUSTER, TRANSACTIONAL_ID, DELEGATION_TOKEN. See Authorization
                      using ACLs to find definitions of resource types and mappings
                      of (resource_type, operation) to one or more Kafka APIs or request
                      types. The type of the resource.'
                    type: string
                  restEndpoint:
                    description: The REST endpoint of the Kafka cluster, for example,
                      https://pkc-00000.us-central1.gcp.confluent.cloud:443. The REST
                      endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
